<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class amiguetesPtuitBundleEntityTagProxy extends \amiguetes\PtuitBundle\Entity\Tag implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setTexto($texto)
    {
        $this->__load();
        return parent::setTexto($texto);
    }

    public function getTexto()
    {
        $this->__load();
        return parent::getTexto();
    }

    public function setCreado($creado)
    {
        $this->__load();
        return parent::setCreado($creado);
    }

    public function getCreado()
    {
        $this->__load();
        return parent::getCreado();
    }

    public function addMensajeid(\amiguetes\PtuitBundle\Entity\Mensaje $mensajeid)
    {
        $this->__load();
        return parent::addMensajeid($mensajeid);
    }

    public function getMensajeid()
    {
        $this->__load();
        return parent::getMensajeid();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'texto', 'mensajeid', 'creado');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}