<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class amiguetesPtuitBundleEntityAvatarProxy extends \amiguetes\PtuitBundle\Entity\Avatar implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setOriginal($original)
    {
        $this->__load();
        return parent::setOriginal($original);
    }

    public function getOriginal()
    {
        $this->__load();
        return parent::getOriginal();
    }

    public function setAncho($ancho)
    {
        $this->__load();
        return parent::setAncho($ancho);
    }

    public function getAncho()
    {
        $this->__load();
        return parent::getAncho();
    }

    public function setAlto($alto)
    {
        $this->__load();
        return parent::setAlto($alto);
    }

    public function getAlto()
    {
        $this->__load();
        return parent::getAlto();
    }

    public function setMediaType($mediaType)
    {
        $this->__load();
        return parent::setMediaType($mediaType);
    }

    public function getMediaType()
    {
        $this->__load();
        return parent::getMediaType();
    }

    public function setFilename($filename)
    {
        $this->__load();
        return parent::setFilename($filename);
    }

    public function getFilename()
    {
        $this->__load();
        return parent::getFilename();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setCreado($creado)
    {
        $this->__load();
        return parent::setCreado($creado);
    }

    public function getCreado()
    {
        $this->__load();
        return parent::getCreado();
    }

    public function setModificado($modificado)
    {
        $this->__load();
        return parent::setModificado($modificado);
    }

    public function getModificado()
    {
        $this->__load();
        return parent::getModificado();
    }

    public function setUsuario(\amiguetes\PtuitBundle\Entity\Usuario $usuario)
    {
        $this->__load();
        return parent::setUsuario($usuario);
    }

    public function getUsuario()
    {
        $this->__load();
        return parent::getUsuario();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'original', 'ancho', 'alto', 'mediaType', 'filename', 'url', 'creado', 'modificado', 'usuario');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}